{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/Projects/Eschool/src/auth/signIn/component/SendMail.jsx\";\nimport React, { Component } from 'react';\nimport bcryptjs from 'bcryptjs';\nimport parseJwt from '../../../shared/utils/parseJwt.js';\nimport './SendMail.css';\n\nclass SendMailBody extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: '',\n      mail: ''\n    };\n\n    this.handleEmailEntry = e => {\n      this.setState({\n        mail: e.target.value\n      });\n    };\n\n    this.handleCodeEntry = e => {\n      // this.state.code === e.target.value?(<Redirect to='/resetpwd' />):(null)\n      if (this.state.code === e.target.value) {\n        console.log('redirect to the /resetpwd page');\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let recoveryMail = document.getElementById('recoveryMail');\n      let fontAwe = document.getElementById('iTag');\n      let codeInput = document.getElementById('codeInput');\n      recoveryMail.removeAttribute('required');\n      recoveryMail.setAttribute('hidden', 'true');\n      fontAwe.classList = [];\n      fontAwe.setAttribute('hidden', 'true');\n      codeInput.removeAttribute('hidden');\n      codeInput.setAttribute('required', 'true');\n      document.getElementsByClassName('sendMailBtn')[0].setAttribute('hidden', 'true');\n      document.getElementsByClassName('sendMailForm')[0].removeAttribute(onsubmit);\n      fetch('https://localhost:3001/send-mail', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.mail\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sendMailForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      id: \"iTag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleEmailEntry,\n      type: \"email\",\n      id: \"recoveryMail\",\n      className: \"recoveryMail\",\n      placeholder: \"Recovery email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      hidden: true,\n      onChange: this.handleCodeEntry,\n      id: \"codeInput\",\n      type: \"text\",\n      className: \"recoveryCode\",\n      placeholder: \"Code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"sendMailBtn\",\n      placeholder: \"Send code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default SendMailBody;","map":{"version":3,"sources":["/home/angelo/Desktop/Projects/Eschool/src/auth/signIn/component/SendMail.jsx"],"names":["React","Component","bcryptjs","parseJwt","SendMailBody","state","code","mail","handleEmailEntry","e","setState","target","value","handleCodeEntry","console","log","handleSubmit","preventDefault","recoveryMail","document","getElementById","fontAwe","codeInput","removeAttribute","setAttribute","classList","getElementsByClassName","onsubmit","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport bcryptjs from 'bcryptjs';\n\nimport parseJwt from '../../../shared/utils/parseJwt.js'\n\nimport './SendMail.css'\n\nclass SendMailBody extends Component {\n    state={\n        code:'',\n        mail:''\n    }\n\n    handleEmailEntry=(e)=>{\n        this.setState({\n            mail:e.target.value\n        })\n    }\n\n    handleCodeEntry=(e)=>{\n        // this.state.code === e.target.value?(<Redirect to='/resetpwd' />):(null)\n        if(this.state.code === e.target.value){\n            console.log('redirect to the /resetpwd page')\n        }\n    }\n\n    handleSubmit =(e)=>{\n        e.preventDefault();\n        let recoveryMail = document.getElementById('recoveryMail')\n        let fontAwe = document.getElementById('iTag')\n        let codeInput =document.getElementById('codeInput')\n        recoveryMail.removeAttribute('required')\n        recoveryMail.setAttribute('hidden', 'true')\n        fontAwe.classList=[]\n        fontAwe.setAttribute('hidden', 'true')\n        codeInput.removeAttribute('hidden')\n        codeInput.setAttribute('required', 'true')\n        document.getElementsByClassName('sendMailBtn')[0].setAttribute('hidden','true')\n        document.getElementsByClassName('sendMailForm')[0].removeAttribute(onsubmit)\n\n        fetch('https://localhost:3001/send-mail', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              email: this.state.mail,\n            })\n        })\n        .then(response=>response.json())\n\n        .then(data=>{\n            console.log(data)\n        })\n        .catch(error=>console.log(error))\n    }\n\n    render() {\n        return (\n            <div>\n                <form className='sendMailForm' onSubmit={this.handleSubmit}>\n                    <i className='fa fa-envelope' id='iTag' ><input onChange={this.handleEmailEntry} type='email' id='recoveryMail' className='recoveryMail' placeholder='Recovery email' required/></i>\n                    <input hidden onChange={this.handleCodeEntry} id='codeInput' type='text' className='recoveryCode' placeholder='Code' />\n                    <input type='submit' className='sendMailBtn' placeholder='Send code' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SendMailBody\n"]},"metadata":{},"sourceType":"module"}