{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/Projects/Eschool/src/auth/signIn/component/ForgotPassword.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport parseJwt from '../../../shared/utils/parseJwt.js';\nimport './ForgotPassword.css';\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      error: false\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      }, () => console.log(this.state.password));\n    };\n\n    this.verifyPasswords = e => {\n      let btn = document.getElementById('fgtSubmit');\n\n      if (e.target.value !== this.state.password) {\n        this.setState({\n          error: true\n        });\n        btn.disabled = true;\n        btn.style.backgroundColor = 'grey';\n      } else {\n        btn.disabled = false;\n        btn.style.backgroundColor = '#28A08B';\n        this.setState({\n          error: false\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // push to the signed in page(depending on the user that is signed in)\n\n      const id = parseJwt(window.localStorage.getItem('token')).id;\n      fetch('http://localhost:3001/reset-password', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          password: this.state.password\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.message) {\n          alert(data.message);\n          return /*#__PURE__*/React.createElement(Redirect, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }\n          });\n        } else {\n          alert(data.error);\n        }\n      }).catch(error => console.log(error.message));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forgotMiddle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"fgtPwdForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.error ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pwdMismatchError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 40\n      }\n    }, \"Passwords don't match!!!\") : null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handlePasswordChange,\n      className: \"fgtInput\",\n      placeholder: \"New password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.verifyPasswords,\n      className: \"fgtInput\",\n      placeholder: \"Confirm password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      onClick: this.handleSubmit,\n      type: \"submit\",\n      className: \"forgetSubmit\",\n      id: \"fgtSubmit\",\n      value: \"Change password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/angelo/Desktop/Projects/Eschool/src/auth/signIn/component/ForgotPassword.jsx"],"names":["React","Component","Redirect","parseJwt","ForgotPassword","state","password","error","handlePasswordChange","e","setState","target","value","console","log","verifyPasswords","btn","document","getElementById","disabled","style","backgroundColor","handleSubmit","preventDefault","id","window","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","data","message","alert","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router';\n\nimport parseJwt from '../../../shared/utils/parseJwt.js'\nimport './ForgotPassword.css'\n\nclass ForgotPassword extends Component {\n    state={\n        password:'',\n        error:false\n    }\n\n    handlePasswordChange = (e)=>{\n        this.setState({\n            password: e.target.value\n        },()=> console.log(this.state.password))\n    }\n\n    verifyPasswords = (e) =>{\n        let btn = document.getElementById('fgtSubmit')\n        if(e.target.value !== this.state.password){\n            this.setState({error:true})\n            btn.disabled=true\n            btn.style.backgroundColor='grey'\n        }else{\n            btn.disabled=false\n            btn.style.backgroundColor = '#28A08B'\n            this.setState({error:false})\n        }\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault()\n        // push to the signed in page(depending on the user that is signed in)\n        const id = parseJwt(window.localStorage.getItem('token')).id\n\n        fetch('http://localhost:3001/reset-password', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: id,\n              password: this.state.password\n            })\n        })\n        .then(response=>response.json())\n\n        .then(data=>{\n            if(data.message) {\n                alert(data.message)\n                return (<Redirect/>)\n            }\n            else{\n                alert(data.error)\n            }\n        })\n          .catch(error=>console.log(error.message))\n    }\n\n    render() {\n        return (\n            <div className=\"forgotMiddle\">\n                <form className=\"fgtPwdForm\" onSubmit={this.handleSubmit} >\n                    {this.state.error?(<div className='pwdMismatchError'>Passwords don't match!!!</div>):(null)}\n                    <input type=\"text\" onChange={this.handlePasswordChange}className = 'fgtInput' placeholder='New password' />\n                    <input type=\"text\" onChange={this.verifyPasswords} className = 'fgtInput' placeholder='Confirm password' />\n                    <input disabled onClick={this.handleSubmit} type='submit' className = 'forgetSubmit' id = 'fgtSubmit' value='Change password' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}